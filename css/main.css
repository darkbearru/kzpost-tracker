body {
    display: grid;
    grid-template-rows: 90px auto 60px;
    margin: 0;
    padding: 0;
    font-family: Roboto, Arial, Helvetica;
    font-size: 16px;
    line-height: 1.5rem;
    height: 100vh;
}

header {
    grid-row: 1;
    height: auto;
    background-color: #2563eb;
    color: #fff;
}

main {
    grid-row: 2;
    padding: 2rem 0;
}

main > section {
    flex-wrap: wrap;
}

main article {
    width: 100%;
    font-size: 1rem;
    color: #1e293b;
    margin: 0 1rem;
}

article i {
    font-style: normal;
    font-size: 0.8rem;
    color: #64748b;
}

article .details {
    margin-top: 2rem;
    padding: 1rem;
    border: 1px solid #fff;
    border-radius: 0.5rem;
    position: relative;
    font-size: 0.95rem;
}

article .details > button {
    position: absolute;
    top: -1rem;
    left: 50%;
    transform: translateX(-50%);
    font-size: 0.8rem;
    background-color: #2563eb;
    color: #fff;
    border: none;
    border-radius: 0.5rem;
    padding: 0.5rem 1rem;
}

.details > div {
    display: none;
}

.details.is-show {
    border: 1px solid #cbd5e1;
}

.details.is-show > div {
    display: block;
}

footer {
    grid-row: 3;
    background-color: #64748b;
    color: #f1f5f9;
    text-align: center;
    display: flex;
    justify-content: center;
}

header > section {
    justify-content: center;
    align-items: baseline;
    flex-wrap: wrap;
}

header h1 {
    width: 100%;
    text-align: center;
    margin-bottom: 0.5rem;
}

header p {
    white-space: nowrap;
    color: #bfdbfe;
    padding: 0 1rem;
    margin: 0 0 1rem 0;
}

section {
    display: flex;
    margin: 0 auto;
}

form {
    width: 100%;
    max-width: 360px;
    margin: 0 1rem;
    background-color: #cbd5e1;
    border-radius: 0.5rem;
    padding: 1rem;
    position: relative;
}


@media (min-width: 768px) {
    body {
        grid-template-rows: 60px auto 60px;
    }

    header {
        height: 60px;
    }

    header h1 {
        width: auto;
    }

    section {
        max-width: 760px;
    }

    header > section {
        flex-wrap: nowrap;
    }

    article {
        margin: 0;
    }

    form {
        margin: 0 auto;
    }

    article .details {
        padding: 2rem;
    }

}


form > div {
    display: flex;
    flex-wrap: nowrap;
}

form > div + p {
    display: none;
}

form > div.error + p {
    display: block;
}


form > div.error .input-text {
    border: 2px solid #b91c1c;
}

.error-message {
    font-size: 0.8rem;
    line-height: 1rem;
    margin: 0.5rem 0;
    color: #b91c1c;
    padding-left: 0.6rem;
}

form button {
    font-size: 1rem;
    background-color: #2563eb;
    color: #fff;
    border: none;
    border-radius: 0 0.5rem 0.5rem 0;
    padding: 0 1rem;
}

.input-text {
    font-size: 1rem;
    background-color: #fff;
    border: 2px solid #fff;
    border-radius: 0.5rem 0 0 0.5rem;
    width: 100%;
    padding: 0.5rem;
    color: #334155;
    outline: none;
}

.input-text:focus {
    border: 2px solid #2563eb;
}

.input-text::placeholder {
    color: #64748b;
}

.error .input-text {
}

form.is-loading .loader {
    display: flex;
}

.loader {
    display: none;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    justify-content: center;
    align-items: center;
    background-color: rgba(255, 255, 255, 0.8);
}

.clock-loader {
    --clock-color: #2563eb;
    --clock-width: 2rem;
    --clock-radius: calc(var(--clock-width) / 2);
    --clock-minute-length: calc(var(--clock-width) * 0.4);
    --clock-hour-length: calc(var(--clock-width) * 0.2);
    --clock-thickness: 0.2rem;

    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--clock-width);
    height: var(--clock-width);
    border: 3px solid var(--clock-color);
    border-radius: 50%;
}

.clock-loader::before,
.clock-loader::after {
    position: absolute;
    content: "";
    top: calc(var(--clock-radius) * 0.25);
    width: var(--clock-thickness);
    background: var(--clock-color);
    border-radius: 10px;
    transform-origin: center calc(100% - calc(var(--clock-thickness) / 2));
    animation: spin infinite linear;
}

.clock-loader::before {
    height: var(--clock-minute-length);
    animation-duration: 2s;
}

.clock-loader::after {
    top: calc(var(--clock-radius) * 0.25 + var(--clock-hour-length));
    height: var(--clock-hour-length);
    animation-duration: 15s;
}


@keyframes spin {
    to {
        transform: rotate(1turn);
    }
}